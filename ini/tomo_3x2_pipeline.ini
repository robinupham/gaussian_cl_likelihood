; CosmoSIS pipeline to produce tomographic 3x2pt Cls.
; See CosmoSIS documentation at https://bitbucket.org/joezuntz/cosmosis/wiki/Home

; Use "sampler = grid" to iterate over a grid specified in another ini file by its limits and resolution,
; such as de_grid.ini,
; or "sampler = list" to run over a pre-defined chain in another file,
; such as one produced by cosmosis_utils.generate_chain_input - note that in this case a values file still needs to be
; supplied to define both all the fixed parameters and the prior ranges over which the varied parameters listed in the
; chain file will be accepted.
[runtime]
; sampler = grid
sampler = list
root = /path-to-root-dir

; [grid]
; nsample_dimension = 2
; save = /path-to-output-dir/

; The ${CHAIN_NO} environment variable is for use with run_cosmosis_chains.sh,
; but can be replaced with a hardcoded input path as required.
[list]
filename = /path-to-input_dir/chain${CHAIN_NO}.txt
save = /path-to-output-dir/chain${CHAIN_NO}/

[output]
format = text
filename = /path-to-output-dir/chain${CHAIN_NO}/output.txt

; "likelihoods" can be safely left blank
[pipeline]
modules = consistent_parameters camb halofit no_bias gaussian_window project_2d
values = de_grid.ini
likelihoods =
debug=T

; The consistency module translates between parametrisations used by different modules or the input parameters
[consistent_parameters]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

; CAMB in mode where it does background evolution, CMB, and matter power
; Note that CAMB has certain licence conditions and papers to cite
[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
feedback=2

; Halofit-Takahashi to generate NL matter power spectrum
[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so

; Calculate galaxy power spectrum assuming no galaxy bias
[no_bias]
file = cosmosis-standard-library/bias/no_bias/no_bias.py

; Redshift distributions for 5 evenly-spaced Gaussian bins between 0.5 and 2
[gaussian_window]
file = cosmosis-standard-library/number_density/gaussian_window/gaussian_window.py
z = 0.65 0.95 1.25 1.55 1.85
sigma = 0.3 0.3 0.3 0.3 0.3

; project_2d to do the lensing projection to get tomographic 3x2 Cl
; To use "linspaced = T" requires the modified project_2d.py file
[project_2d]
file = cosmosis-standard-library/structure/projection/project_2d.py
shear-shear = T
position-position = T
position-shear = T
ell_min = 2.0
ell_max = 2000.0
n_ell = 1999
linspaced = T
